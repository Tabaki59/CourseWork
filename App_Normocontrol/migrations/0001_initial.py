# Generated by Django 3.0.4 on 2020-03-11 20:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingStatus',
            fields=[
                ('status_id', models.IntegerField(db_column='Status_id', primary_key=True, serialize=False)),
                ('status', models.TextField(db_column='Status')),
            ],
            options={
                'db_table': 'Meeting_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Freetime',
            fields=[
                ('freetime_id', models.IntegerField(db_column='Freetime_id', primary_key=True, serialize=False)),
                ('mon_beg', models.TimeField(blank=True, db_column='Mon_beg', null=True)),
                ('mon_end', models.TimeField(blank=True, db_column='Mon_end', null=True)),
                ('tue_beg', models.TimeField(blank=True, db_column='Tue_beg', null=True)),
                ('tue_end', models.TimeField(blank=True, db_column='Tue_end', null=True)),
                ('wen_beg', models.TimeField(blank=True, db_column='Wen_beg', null=True)),
                ('wen_end', models.TimeField(blank=True, db_column='Wen_end', null=True)),
                ('thu_beg', models.TimeField(blank=True, db_column='Thu_beg', null=True)),
                ('thu_end', models.TimeField(blank=True, db_column='Thu_end', null=True)),
                ('fri_beg', models.TimeField(blank=True, db_column='Fri_beg', null=True)),
                ('fri_end', models.TimeField(blank=True, db_column='Fri_end', null=True)),
            ],
            options={
                'verbose_name': 'Диапазоны времени, не редактировать без добавления нового преподавателя',
                'verbose_name_plural': 'Диапазоны времени, не редактировать без добавления нового преподавателя',
                'db_table': 'Freetime',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.IntegerField(db_column='Group_id', primary_key=True, serialize=False)),
                ('group', models.CharField(db_column='Group', max_length=5)),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'db_table': 'Group',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('school_id', models.IntegerField(db_column='School_id', primary_key=True, serialize=False)),
                ('school', models.TextField(db_column='School')),
            ],
            options={
                'verbose_name': 'Направление',
                'verbose_name_plural': 'Направления',
                'db_table': 'School',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('type_id', models.IntegerField(db_column='Type_id', primary_key=True, serialize=False)),
                ('type_name', models.TextField(db_column='Type_name')),
                ('general_criteria', models.TextField(db_column='General_criteria')),
                ('titles_criteria', models.TextField(db_column='Titles_criteria')),
                ('lists_criteria', models.TextField(db_column='Lists_criteria')),
                ('tables_criteria', models.TextField(db_column='Tables_criteria')),
                ('formulas_criteria', models.TextField(db_column='Formulas_criteria')),
                ('pictures_criteria', models.TextField(db_column='Pictures_criteria')),
                ('literature_criteria', models.TextField(db_column='Literature_criteria')),
                ('applications_criteria', models.TextField(db_column='Applications_criteria')),
            ],
            options={
                'verbose_name': 'Тип работы',
                'verbose_name_plural': 'Типы работы',
                'db_table': 'Work',
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('teacher_id', models.IntegerField(db_column='Teacher_id', primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='Name')),
                ('password', models.TextField(db_column='Password')),
                ('email', models.TextField(db_column='Email')),
                ('phone', models.TextField(db_column='Phone')),
                ('login', models.TextField(db_column='Login')),
                ('freetime', models.ForeignKey(blank=True, db_column='Freetime', null=True, on_delete=django.db.models.deletion.CASCADE, to='App_Normocontrol.Freetime')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
                'db_table': 'Teachers',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('student_id', models.CharField(db_column='Student_id', max_length=6, primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='Name')),
                ('course', models.IntegerField(db_column='Course')),
                ('email', models.TextField(db_column='Email')),
                ('login', models.TextField(db_column='Login')),
                ('group', models.ForeignKey(db_column='Group', on_delete=django.db.models.deletion.DO_NOTHING, to='App_Normocontrol.Group')),
                ('school', models.ForeignKey(db_column='School', on_delete=django.db.models.deletion.DO_NOTHING, to='App_Normocontrol.School')),
                ('work', models.ForeignKey(db_column='Work', on_delete=django.db.models.deletion.DO_NOTHING, to='App_Normocontrol.Work')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
                'db_table': 'Students',
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('meeting_id', models.IntegerField(db_column='Meeting_id', primary_key=True, serialize=False)),
                ('meeting_time', models.TimeField(db_column='Meeting_time')),
                ('notes', models.TextField(db_column='Notes')),
                ('meeting_status', models.ForeignKey(db_column='Meeting_status', on_delete=django.db.models.deletion.DO_NOTHING, to='App_Normocontrol.MeetingStatus')),
                ('student', models.ForeignKey(db_column='Student', on_delete=django.db.models.deletion.DO_NOTHING, to='App_Normocontrol.Students')),
                ('teacher', models.ForeignKey(db_column='Teacher', on_delete=django.db.models.deletion.DO_NOTHING, to='App_Normocontrol.Teachers')),
            ],
            options={
                'db_table': 'Meeting',
            },
        ),
    ]
